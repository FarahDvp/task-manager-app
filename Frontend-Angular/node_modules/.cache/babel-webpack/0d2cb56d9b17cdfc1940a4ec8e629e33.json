{"ast":null,"code":"import _asyncToGenerator from \"/home/mohamedhabaieb/IsammSpring/GitLab_Devops_Spring/devops/GestionDeTachesFront/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Login } from \"../../Models/login\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../Services/form-controles.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../Services/Security/auth-server.service\";\nimport * as i4 from \"../../Services/Security/token-storage.service\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\n\nfunction LoginComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \" Please enter username* \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \" Please enter your password* \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \"Login successful! Redirecting...\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_div_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtext(1, \"Login failed. Please check your credentials and try again.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\n\nexport class LoginComponent {\n  constructor(formService, router, authService, tokenStorage) {\n    this.formService = formService;\n    this.router = router;\n    this.authService = authService;\n    this.tokenStorage = tokenStorage;\n    this.role = this.tokenStorage.getRole();\n    this.login = new Login();\n    this.showsuccessmessage = false;\n    this.showerrormessage = false;\n  }\n\n  ngOnInit() {\n    this.showsuccessmessage = false;\n    this.showerrormessage = false;\n  }\n\n  validateAllFormFields(formGroup) {\n    Object.keys(formGroup.controls).forEach(field => {\n      const control = formGroup.get(field);\n\n      if (control instanceof FormControl) {\n        control.markAsTouched({\n          onlySelf: true\n        });\n      } else if (control instanceof FormGroup) {\n        this.validateAllFormFields(control);\n      }\n    });\n  }\n\n  onSubmit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.formService.formGroupLogin.valid) {\n        _this.login.userName = _this.formService.formGroupLogin.value.username;\n        _this.login.password = _this.formService.formGroupLogin.value.password;\n        console.log('login :', _this.login);\n\n        _this.authService.login(_this.login).subscribe(data => {\n          console.log('data :', data);\n          _this.showerrormessage = false;\n          _this.showsuccessmessage = true;\n\n          _this.tokenStorage.savedata(data);\n\n          if (localStorage.getItem('role-user') === 'user') {\n            console.log('role user:', data.role);\n\n            _this.router.navigateByUrl('homeUser/DashbordUser');\n          } else if (data.role === 'admin') {\n            console.log('role admin:', data.role);\n\n            _this.router.navigateByUrl('homeAdmin/DashbordAdmin');\n          }\n\n          _this.onClear();\n        }, error => {\n          console.log('error :', error);\n          _this.showerrormessage = true;\n          _this.showsuccessmessage = false;\n          setTimeout(() => {\n            _this.showerrormessage = false;\n          }, 2000);\n        });\n      } else {\n        _this.validateAllFormFields(_this.formService.formGroupLogin);\n      }\n    })();\n  }\n\n  onClear() {\n    this.formService.formGroupLogin.reset();\n  }\n\n}\n\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormControlerService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthServerService), i0.ɵɵdirectiveInject(i4.TokenStorageService));\n};\n\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 38,\n  vars: 11,\n  consts: [[1, \"\"], [1, \"wrapper\"], [1, \"login-content\"], [1, \"container\"], [1, \"row\", \"align-items-center\", \"justify-content-center\", \"height-self-center\"], [1, \"col-lg-8\"], [1, \"card\", \"auth-card\"], [1, \"card-body\", \"p-0\"], [1, \"d-flex\", \"align-items-center\", \"auth-content\"], [1, \"col-lg-6\", \"bg-primary\", \"content-left\"], [1, \"p-3\"], [1, \"mb-2\", \"text-white\"], [3, \"formGroup\"], [1, \"row\"], [1, \"col-lg-12\"], [1, \"floating-label\", \"form-group\"], [\"formControlName\", \"username\", \"type\", \"email\", \"placeholder\", \" \", 1, \"floating-input\", \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"formControlName\", \"password\", \"type\", \"password\", \"placeholder\", \" \", 1, \"floating-input\", \"form-control\", 3, \"ngClass\"], [\"type\", \"submit\", 1, \"btn\", \"btn-white\", \"col-lg-12\", 3, \"click\"], [1, \"mt-3\"], [\"href\", \"auth-sign-up.html\", 1, \"text-white\", \"text-underline\"], [1, \"col-lg-6\", \"content-right\"], [\"src\", \"assets/images/login/01.png\", \"alt\", \"\", 1, \"img-fluid\", \"image-right\"], [1, \"alert-container\"], [\"class\", \"alert alert-success\", \"role\", \"alert\", 4, \"ngIf\"], [\"class\", \"alert alert-danger\", \"role\", \"alert\", 4, \"ngIf\"], [1, \"invalid-feedback\"], [\"role\", \"alert\", 1, \"alert\", \"alert-success\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"body\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"section\", 2);\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵelementStart(4, \"div\", 4);\n      i0.ɵɵelementStart(5, \"div\", 5);\n      i0.ɵɵelementStart(6, \"div\", 6);\n      i0.ɵɵelementStart(7, \"div\", 7);\n      i0.ɵɵelementStart(8, \"div\", 8);\n      i0.ɵɵelementStart(9, \"div\", 9);\n      i0.ɵɵelementStart(10, \"div\", 10);\n      i0.ɵɵelementStart(11, \"h2\", 11);\n      i0.ɵɵtext(12, \"Sign In\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"form\", 12);\n      i0.ɵɵelementStart(14, \"div\", 13);\n      i0.ɵɵelementStart(15, \"div\", 14);\n      i0.ɵɵelementStart(16, \"div\", 15);\n      i0.ɵɵelement(17, \"input\", 16);\n      i0.ɵɵelementStart(18, \"label\");\n      i0.ɵɵtext(19, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(20, LoginComponent_div_20_Template, 2, 0, \"div\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 14);\n      i0.ɵɵelementStart(22, \"div\", 15);\n      i0.ɵɵelement(23, \"input\", 18);\n      i0.ɵɵtemplate(24, LoginComponent_div_24_Template, 2, 0, \"div\", 17);\n      i0.ɵɵelementStart(25, \"label\");\n      i0.ɵɵtext(26, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"button\", 19);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_27_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(28, \"Sign In\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"p\", 20);\n      i0.ɵɵtext(30, \" Create an Account \");\n      i0.ɵɵelementStart(31, \"a\", 21);\n      i0.ɵɵtext(32, \"Sign Up\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"div\", 22);\n      i0.ɵɵelement(34, \"img\", 23);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"div\", 24);\n      i0.ɵɵtemplate(36, LoginComponent_div_36_Template, 2, 0, \"div\", 25);\n      i0.ɵɵtemplate(37, LoginComponent_div_37_Template, 2, 0, \"div\", 26);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"formGroup\", ctx.formService.formGroupLogin);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx.formService.username && ctx.formService.username.errors && ctx.formService.username.touched));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.formService.username && ctx.formService.username.hasError(\"required\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, ctx.formService.password && ctx.formService.password.errors && ctx.formService.password.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.formService.password && ctx.formService.password.hasError(\"required\"));\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngIf\", ctx.showsuccessmessage);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showerrormessage);\n    }\n  },\n  directives: [i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.DefaultValueAccessor, i5.NgControlStatus, i5.FormControlName, i6.NgClass, i6.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"sources":["/home/mohamedhabaieb/IsammSpring/GitLab_Devops_Spring/devops/GestionDeTachesFront/src/app/Components/login/login.component.ts","/home/mohamedhabaieb/IsammSpring/GitLab_Devops_Spring/devops/GestionDeTachesFront/src/app/Components/login/login.component.html"],"names":[],"mappings":"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","sourcesContent":["import {Component, ElementRef, OnInit} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {TokenStorageService} from \"../../Services/Security/token-storage.service\";\nimport {FormControlerService} from \"../../Services/form-controles.service\";\nimport {AuthServerService} from \"../../Services/Security/auth-server.service\";\nimport {Login} from \"../../Models/login\";\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {async} from \"rxjs\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  role= this.tokenStorage.getRole();\n  login :Login = new Login();\n  showsuccessmessage: boolean=false;\n  showerrormessage: boolean=false;\n  constructor(public formService :FormControlerService,\n              private router:Router,\n              private authService :AuthServerService,\n              private tokenStorage :TokenStorageService) { }\n\n  ngOnInit(): void {\n    this.showsuccessmessage = false;\n    this.showerrormessage = false;\n  }\n  validateAllFormFields(formGroup: FormGroup) {\n    Object.keys(formGroup.controls).forEach(field => {\n      const control = formGroup.get(field);\n      if (control instanceof FormControl) {\n        control.markAsTouched({ onlySelf: true });\n      } else if (control instanceof FormGroup) {\n        this.validateAllFormFields(control);\n      }\n    } );\n  }\n  async onSubmit() {\n    if (this.formService.formGroupLogin.valid) {\n      this.login.userName = this.formService.formGroupLogin.value.username;\n      this.login.password = this.formService.formGroupLogin.value.password;\n\n      console.log('login :', this.login);\n\n      this.authService.login(this.login).subscribe(\n        (data: any) => {\n          console.log('data :', data);\n          this.showerrormessage = false;\n          this.showsuccessmessage = true;\n          this.tokenStorage.savedata(data);\n\n          if (localStorage.getItem('role-user') === 'user') {\n            console.log('role user:', data.role);\n            this.router.navigateByUrl('homeUser/DashbordUser');\n          } else if (data.role === 'admin') {\n            console.log('role admin:', data.role);\n            this.router.navigateByUrl('homeAdmin/DashbordAdmin');\n          }\n\n          this.onClear();\n        },\n        (error) => {\n          console.log('error :', error);\n          this.showerrormessage = true;\n          this.showsuccessmessage = false;\n          setTimeout(() => {\n            this.showerrormessage = false;\n          }, 2000);\n        }\n      );\n    } else {\n      this.validateAllFormFields(this.formService.formGroupLogin);\n    }\n  }\n\n\n  onClear() {\n    this.formService.formGroupLogin.reset();\n  }\n\n}\n","<body class=\" \">\n<div class=\"wrapper\">\n  <section class=\"login-content\">\n    <div class=\"container\">\n      <div class=\"row align-items-center justify-content-center height-self-center\">\n        <div class=\"col-lg-8\">\n          <div class=\"card auth-card\">\n            <div class=\"card-body p-0\">\n              <div class=\"d-flex align-items-center auth-content\">\n                <div class=\"col-lg-6 bg-primary content-left\">\n                  <div class=\"p-3\">\n                    <h2 class=\"mb-2 text-white \">Sign In</h2>\n                    <form [formGroup]=\"formService.formGroupLogin\">\n                      <div class=\"row\">\n                        <div class=\"col-lg-12\">\n                          <div class=\"floating-label form-group\">\n                            <input\n                              formControlName=\"username\"\n                              [ngClass]=\"{ 'is-invalid':formService.username && formService.username.errors && formService.username.touched}\"\n                              class=\"floating-input form-control\" type=\"email\" placeholder=\" \">\n                            <label>Username</label>\n                            <div class=\"invalid-feedback\" *ngIf=\"formService.username && formService.username.hasError('required')\">\n                              Please enter username*\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"col-lg-12\">\n                          <div class=\"floating-label form-group\">\n                            <input\n                              formControlName=\"password\"\n                              [ngClass]=\"{ 'is-invalid': formService.password && formService.password.errors && formService.password.touched}\"\n                              class=\"floating-input form-control\" type=\"password\" placeholder=\" \"/>\n                            <div class=\"invalid-feedback\"\n                                 *ngIf=\"formService.password && formService.password.hasError('required')\" >\n                              Please enter your password*\n                            </div>\n                            <label>Password</label>\n                          </div>\n                        </div>\n                      </div>\n                      <button type=\"submit\" class=\"btn btn-white col-lg-12\" (click)=\"onSubmit()\">Sign In</button>\n                      <p class=\"mt-3\">\n                        Create an Account <a href=\"auth-sign-up.html\" class=\"text-white text-underline\">Sign Up</a>\n                      </p>\n                    </form>\n                  </div>\n                </div>\n                <div class=\"col-lg-6 content-right\">\n                  <img src=\"assets/images/login/01.png\" class=\"img-fluid image-right\" alt=\"\">\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</div>\n</body>\n\n<!-- Alert container -->\n<div class=\"alert-container\">\n  <!-- Alert success -->\n  <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"showsuccessmessage\">Login successful! Redirecting...</div>\n\n  <!-- Alert error -->\n  <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"showerrormessage\">Login failed. Please check your credentials and try again.</div>\n</div>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}